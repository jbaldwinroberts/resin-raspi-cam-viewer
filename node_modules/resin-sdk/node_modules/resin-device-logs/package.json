{
  "name": "resin-device-logs",
  "version": "2.0.2",
  "description": "Resin.io device logs utilities",
  "main": "build/logs.js",
  "homepage": "https://github.com/resin-io/resin-device-logs",
  "repository": {
    "type": "git",
    "url": "git://github.com/resin-io/resin-device-logs.git"
  },
  "keywords": [
    "resin",
    "logs",
    "device"
  ],
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "gulp test",
    "prepublish": "gulp build",
    "readme": "jsdoc2md --template doc/README.hbs build/logs.js > README.md"
  },
  "author": {
    "name": "Juan Cruz Viotti",
    "email": "juan@resin.io"
  },
  "license": "MIT",
  "devDependencies": {
    "coffee-script": "~1.8.0",
    "gulp": "~3.8.10",
    "gulp-coffee": "~2.2.0",
    "gulp-coffeelint": "~0.4.0",
    "gulp-mocha": "~2.0.0",
    "gulp-util": "~3.0.1",
    "jsdoc-to-markdown": "^1.1.1",
    "mocha": "~2.0.1",
    "mochainon": "^1.0.0"
  },
  "dependencies": {
    "bluebird": "^2.9.30",
    "lodash": "^3.9.3",
    "pubnub": "^3.7.11"
  },
  "readme": "resin-device-logs\n-----------------\n\n[![npm version](https://badge.fury.io/js/resin-device-logs.svg)](http://badge.fury.io/js/resin-device-logs)\n[![dependencies](https://david-dm.org/resin-io/resin-device-logs.png)](https://david-dm.org/resin-io/resin-device-logs.png)\n[![Build Status](https://travis-ci.org/resin-io/resin-device-logs.svg?branch=master)](https://travis-ci.org/resin-io/resin-device-logs)\n[![Build status](https://ci.appveyor.com/api/projects/status/vxkytm4f0t1tuj4f?svg=true)](https://ci.appveyor.com/project/jviotti/resin-device-logs)\n\nResin.io device logs utilities.\n\nRole\n----\n\nThe intention of this module is to provide low level access to Resin.io device logs.\n\n**THIS MODULE IS LOW LEVEL AND IS NOT MEANT TO BE USED BY END USERS DIRECTLY**.\n\nUnless you know what you're doing, use the [Resin SDK](https://github.com/resin-io/resin-sdk) instead.\n\nInstallation\n------------\n\nInstall `resin-device-logs` by running:\n\n```sh\n$ npm install --save resin-device-logs\n```\n\nDocumentation\n-------------\n\n\n* [logs](#module_logs)\n  * [.subscribe(pubnubKeys, device)](#module_logs.subscribe) ⇒ <code>EventEmitter</code>\n  * [.history(pubnubKeys, device)](#module_logs.history) ⇒ <code>Promise.&lt;Array.&lt;String&gt;&gt;</code>\n\n<a name=\"module_logs.subscribe\"></a>\n### logs.subscribe(pubnubKeys, device) ⇒ <code>EventEmitter</code>\nThis function emits various events:\n\n- `line`: When a log line arrives, passing a string as an argument.\n- `error`: When an error occurs, passing an error instance as an argument.\n\nThe object returned by this function also contains the following functions:\n\n- `.unsubscribe()`: Unsubscribe from the device channel.\n\n**Kind**: static method of <code>[logs](#module_logs)</code>  \n**Summary**: Subscribe to device logs  \n**Returns**: <code>EventEmitter</code> - logs  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| pubnubKeys | <code>Object</code> | PubNub keys |\n| pubnubKeys.subscribe_key | <code>String</code> | subscribe key |\n| pubnubKeys.publish_key | <code>String</code> | publish key |\n| device | <code>Object</code> | device |\n\n**Example**  \n```js\ndeviceLogs = logs.subscribe\n\tsubscribe_key: '...'\n\tpublish_key: '...'\n,\n\t\tuuid: '...'\n\ndeviceLogs.on 'line', (line) ->\n\t\tconsole.log(line)\n\ndeviceLogs.on 'error', (error) ->\n\t\tthrow error\n```\n<a name=\"module_logs.history\"></a>\n### logs.history(pubnubKeys, device) ⇒ <code>Promise.&lt;Array.&lt;String&gt;&gt;</code>\n**Kind**: static method of <code>[logs](#module_logs)</code>  \n**Summary**: Get device logs history  \n**Returns**: <code>Promise.&lt;Array.&lt;String&gt;&gt;</code> - device logs history  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| pubnubKeys | <code>Object</code> | PubNub keys |\n| pubnubKeys.subscribe_key | <code>String</code> | subscribe key |\n| pubnubKeys.publish_key | <code>String</code> | publish key |\n| device | <code>Object</code> | device |\n\n**Example**  \n```js\nlogs.history\n\tsubscribe_key: '...'\n\tpublish_key: '...'\n,\n\t\tuuid: '...'\n.then (messages) ->\n\tfor message in messages\n\t\tconsole.log(message)\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io/resin-device-logs/issues/new) on GitHub and the Resin.io team will be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ gulp test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io/resin-device-logs/issues](https://github.com/resin-io/resin-device-logs/issues)\n- Source Code: [github.com/resin-io/resin-device-logs](https://github.com/resin-io/resin-device-logs)\n\nBefore submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:\n\n```sh\n$ gulp lint\n```\n\nLicense\n-------\n\nThe project is licensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/resin-io/resin-device-logs/issues"
  },
  "_id": "resin-device-logs@2.0.2",
  "dist": {
    "shasum": "34e34f37e9e7afec1a57c3bd5756fa8dd9193e5a"
  },
  "_from": "resin-device-logs@^2.0.1",
  "_resolved": "https://registry.npmjs.org/resin-device-logs/-/resin-device-logs-2.0.2.tgz"
}
