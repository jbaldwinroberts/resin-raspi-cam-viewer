{
  "name": "typed-error",
  "version": "0.1.0",
  "description": "A class designed to enable easily extending the built-in javascript Error, allowing typed errors.",
  "main": "src/typed-error.js",
  "scripts": {
    "test": "node node_modules/coffee-script/bin/coffee -c . && node node_modules/mocha/bin/mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/resin-io/typed-error.git"
  },
  "devDependencies": {
    "bluebird": "~2.2.2",
    "chai": "~1.9.0",
    "chai-as-promised": "~4.1.1",
    "coffee-script": "~1.7.1",
    "mocha": "~1.21.3"
  },
  "author": "",
  "bugs": {
    "url": "https://github.com/resin-io/typed-error/issues"
  },
  "homepage": "https://github.com/resin-io/typed-error",
  "readme": "This module allows you to easily extend the built-in Error type for typed error checking\r\n\r\n```coffee-script\r\nTypedError = require 'typed-error'\r\n\r\nclass MyError extends TypedError\r\n\r\ntry\r\n\tthrow new MyError()\r\ncatch e\r\n\tconsole.log(e instanceof MyError) # true\r\n\tconsole.log(e.name) # 'MyError'\r\n\tconsole.log(e.constructor.name) # 'MyError'\r\n\tconsole.log(e.stack) # <stack trace>\r\n\r\n\tif e instanceof MyError\r\n\t\tconsole.log('Do custom handling')\r\n\telse\r\n\t\tconsole.log('Another type of error')\r\n\r\n\t# Or\r\n\tswitch e.name\r\n\t\twhen 'MyError'\r\n\t\t\tconsole.log('Do custom handling')\r\n\t\telse\r\n\t\t\tconsole.log('Another type of error')\r\n\r\n\t# Or\r\n\tswitch e.constructor.name\r\n\t\twhen 'MyError'\r\n\t\t\tconsole.log('Do custom handling')\r\n\t\telse\r\n\t\t\tconsole.log('Another type of error')\r\n```\r\n\r\nAnd with bluebird:\r\n```coffee-script\r\nPromise = require 'bluebird'\r\nTypedError = require 'typed-error'\r\n\r\nclass MyError extends TypedError\r\n\r\nPromise.try ->\r\n\tthrow new MyError()\r\n.catch MyError, (e) ->\r\n\tconsole.log('Do custom handling')\r\n.catch ->\r\n\tconsole.log('Another type of error')\r\n\r\n# Or\r\nMyErrorName = (e) -> e.name is 'MyError'\r\nPromise.try ->\r\n\tthrow new MyError()\r\n.catch MyErrorName, (e) ->\r\n\tconsole.log('Do custom handling')\r\n.catch ->\r\n\tconsole.log('Another type of error')\r\n```\r\n\r\n# Or\r\nMyErrorConstructorName = (e) -> e.constructor.name is 'MyError'\r\nPromise.try ->\r\n\tthrow new MyError()\r\n.catch MyErrorConstructorName, (e) ->\r\n\tconsole.log('Do custom handling')\r\n.catch ->\r\n\tconsole.log('Another type of error')\r\n```",
  "readmeFilename": "README.md",
  "_id": "typed-error@0.1.0",
  "dist": {
    "shasum": "f484b4fa6e4f3d7bdc99de9187584ec07b90418d"
  },
  "_from": "typed-error@^0.1.0",
  "_resolved": "https://registry.npmjs.org/typed-error/-/typed-error-0.1.0.tgz"
}
