{
  "name": "resin-settings-storage",
  "version": "1.0.4",
  "description": "Resin.io settings storage utilities",
  "main": "build/storage.js",
  "homepage": "https://github.com/resin-io/resin-settings-storage",
  "repository": {
    "type": "git",
    "url": "git://github.com/resin-io/resin-settings-storage.git"
  },
  "keywords": [
    "resin",
    "data",
    "storage",
    "settings"
  ],
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "gulp test",
    "prepublish": "gulp build",
    "readme": "jsdoc2md --template doc/README.hbs build/storage.js > README.md"
  },
  "author": {
    "name": "Juan Cruz Viotti",
    "email": "juan@resin.io"
  },
  "license": "Apache-2.0",
  "devDependencies": {
    "coffee-script": "~1.8.0",
    "gulp": "~3.8.10",
    "gulp-coffee": "~2.2.0",
    "gulp-coffeelint": "~0.4.0",
    "gulp-mocha": "~2.0.0",
    "gulp-util": "~3.0.1",
    "jsdoc-to-markdown": "^1.1.1",
    "mocha": "~2.0.1",
    "mochainon": "^1.0.0"
  },
  "dependencies": {
    "bluebird": "^3.3.4",
    "lodash": "^3.10.1",
    "node-localstorage": "^1.1.2",
    "resin-settings-client": "^3.0.0"
  },
  "readme": "resin-settings-storage\n----------------------\n\n[![npm version](https://badge.fury.io/js/resin-settings-storage.svg)](http://badge.fury.io/js/resin-settings-storage)\n[![dependencies](https://david-dm.org/resin-io/resin-settings-storage.png)](https://david-dm.org/resin-io/resin-settings-storage.png)\n[![Build Status](https://travis-ci.org/resin-io/resin-settings-storage.svg?branch=master)](https://travis-ci.org/resin-io/resin-settings-storage)\n[![Build status](https://ci.appveyor.com/api/projects/status/w9kqe2ok1rbkj42y?svg=true)](https://ci.appveyor.com/project/resin-io/resin-settings-storage)\n\nJoin our online chat at [![Gitter chat](https://badges.gitter.im/resin-io/chat.png)](https://gitter.im/resin-io/chat)\n\nResin.io settings storage utilities.\n\nRole\n----\n\nThe intention of this module is to provide low level access to how a Resin.io persists settings in both the filesystem and the browser.\n\n**THIS MODULE IS LOW LEVEL AND IS NOT MEANT TO BE USED BY END USERS DIRECTLY**.\n\nUnless you know what you're doing, use the [Resin SDK](https://github.com/resin-io/resin-sdk) instead.\n\nInstallation\n------------\n\nInstall `resin-settings-storage` by running:\n\n```sh\n$ npm install --save resin-settings-storage\n```\n\nDocumentation\n-------------\n\n\n* [storage](#module_storage)\n  * [.set(name, value)](#module_storage.set) ⇒ <code>Promise</code>\n  * [.get(name)](#module_storage.get) ⇒ <code>Promise.&lt;\\*&gt;</code>\n  * [.has(name)](#module_storage.has) ⇒ <code>Promise.&lt;Boolean&gt;</code>\n  * [.remove(name)](#module_storage.remove) ⇒ <code>Promise</code>\n\n<a name=\"module_storage.set\"></a>\n### storage.set(name, value) ⇒ <code>Promise</code>\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Set a value  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| name | <code>String</code> | name |\n| value | <code>\\*</code> | value |\n\n**Example**  \n```js\nstorage.set('token', '1234')\n```\n<a name=\"module_storage.get\"></a>\n### storage.get(name) ⇒ <code>Promise.&lt;\\*&gt;</code>\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Get a value  \n**Returns**: <code>Promise.&lt;\\*&gt;</code> - value or undefined  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| name | <code>String</code> | name |\n\n**Example**  \n```js\nstorage.get('token').then (token) ->\n\tconsole.log(token)\n```\n<a name=\"module_storage.has\"></a>\n### storage.has(name) ⇒ <code>Promise.&lt;Boolean&gt;</code>\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Check if a value exists  \n**Returns**: <code>Promise.&lt;Boolean&gt;</code> - has value  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| name | <code>String</code> | name |\n\n**Example**  \n```js\nstorage.has('token').then (hasToken) ->\n\tif hasToken\n\t\tconsole.log('Yes')\n\telse\n\t\tconsole.log('No')\n```\n<a name=\"module_storage.remove\"></a>\n### storage.remove(name) ⇒ <code>Promise</code>\n**Kind**: static method of <code>[storage](#module_storage)</code>  \n**Summary**: Remove a value  \n**Access:** public  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| name | <code>String</code> | name |\n\n**Example**  \n```js\nstorage.remove('token')\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io/resin-settings-storage/issues/new) on GitHub and the Resin.io team will be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ gulp test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io/resin-settings-storage/issues](https://github.com/resin-io/resin-settings-storage/issues)\n- Source Code: [github.com/resin-io/resin-settings-storage](https://github.com/resin-io/resin-settings-storage)\n\nBefore submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:\n\n```sh\n$ gulp lint\n```\n\nLicense\n-------\n\nThe project is licensed under the Apache 2.0 license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/resin-io/resin-settings-storage/issues"
  },
  "_id": "resin-settings-storage@1.0.4",
  "dist": {
    "shasum": "82a489b07d16236199ffc9fb598083b6c4fcc0ad"
  },
  "_from": "resin-settings-storage@^1.0.1",
  "_resolved": "https://registry.npmjs.org/resin-settings-storage/-/resin-settings-storage-1.0.4.tgz"
}
