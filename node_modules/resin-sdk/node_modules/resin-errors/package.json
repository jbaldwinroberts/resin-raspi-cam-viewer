{
  "name": "resin-errors",
  "version": "2.4.0",
  "description": "Collection of Resin.io JavaScript errors",
  "main": "build/errors.js",
  "homepage": "https://github.com/resin-io/resin-errors",
  "repository": {
    "type": "git",
    "url": "git://github.com/resin-io/resin-errors.git"
  },
  "keywords": [
    "resin",
    "errors"
  ],
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "gulp test",
    "prepublish": "gulp build",
    "readme": "jsdoc2md --template doc/README.hbs build/errors.js > README.md"
  },
  "author": {
    "name": "Juan Cruz Viotti",
    "email": "juan@resin.io"
  },
  "license": "Apache-2.0",
  "devDependencies": {
    "coffee-script": "~1.8.0",
    "gulp": "~3.8.10",
    "gulp-coffee": "~2.2.0",
    "gulp-coffeelint": "~0.4.0",
    "gulp-mocha": "^2.1.3",
    "gulp-util": "~3.0.1",
    "jsdoc-to-markdown": "^1.1.1",
    "karma": "^0.13.19",
    "mocha": "^2.2.5",
    "mochainon": "^1.0.0",
    "resin-config-karma": "^1.0.1"
  },
  "dependencies": {
    "typed-error": "^0.1.0"
  },
  "readme": "resin-errors\n============\n\n> Resin.io error collection\n\n[![npm version](https://badge.fury.io/js/resin-errors.svg)](http://badge.fury.io/js/resin-errors)\n[![dependencies](https://david-dm.org/resin-io/resin-errors.svg)](https://david-dm.org/resin-io/resin-errors.svg)\n[![Build Status](https://travis-ci.org/resin-io/resin-errors.svg?branch=master)](https://travis-ci.org/resin-io/resin-errors)\n[![Build status](https://ci.appveyor.com/api/projects/status/c7g2vsshixiw4xw9?svg=true)](https://ci.appveyor.com/project/jviotti/resin-errors)\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/resin-io/chat)\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/resin-errors.svg)](https://saucelabs.com/u/resin-errors)\n\nRole\n----\n\nThe intention of this module is to provide a collection of `Error` instances to be used by the Resin SDK.\n\n**THIS MODULE IS LOW LEVEL AND IS NOT MEANT TO BE USED BY END USERS DIRECTLY**.\n\nUnless you know what you're doing, use the [Resin SDK](https://github.com/resin-io/resin-sdk) instead.\n\nInstallation\n------------\n\nInstall `resin-errors` by running:\n\n```sh\n$ npm install --save resin-errors\n```\n\nDocumentation\n-------------\n\n\n* [errors](#module_errors)\n    * [.ResinInvalidDeviceType](#module_errors.ResinInvalidDeviceType)\n        * [new exports.ResinInvalidDeviceType(type)](#new_module_errors.ResinInvalidDeviceType_new)\n    * [.ResinMalformedToken](#module_errors.ResinMalformedToken)\n        * [new exports.ResinMalformedToken(token)](#new_module_errors.ResinMalformedToken_new)\n    * [.ResinExpiredToken](#module_errors.ResinExpiredToken)\n        * [new exports.ResinExpiredToken(token)](#new_module_errors.ResinExpiredToken_new)\n    * [.ResinApplicationNotFound](#module_errors.ResinApplicationNotFound)\n        * [new exports.ResinApplicationNotFound(application)](#new_module_errors.ResinApplicationNotFound_new)\n    * [.ResinDeviceNotFound](#module_errors.ResinDeviceNotFound)\n        * [new exports.ResinDeviceNotFound(device)](#new_module_errors.ResinDeviceNotFound_new)\n    * [.ResinAmbiguousDevice](#module_errors.ResinAmbiguousDevice)\n        * [new exports.ResinAmbiguousDevice(device)](#new_module_errors.ResinAmbiguousDevice_new)\n    * [.ResinAmbiguousApplication](#module_errors.ResinAmbiguousApplication)\n        * [new exports.ResinAmbiguousApplication(application)](#new_module_errors.ResinAmbiguousApplication_new)\n    * [.ResinKeyNotFound](#module_errors.ResinKeyNotFound)\n        * [new exports.ResinKeyNotFound(key)](#new_module_errors.ResinKeyNotFound_new)\n    * [.ResinRequestError](#module_errors.ResinRequestError)\n        * [new exports.ResinRequestError(body, statusCode)](#new_module_errors.ResinRequestError_new)\n    * [.ResinNotLoggedIn](#module_errors.ResinNotLoggedIn)\n\n<a name=\"module_errors.ResinInvalidDeviceType\"></a>\n\n### errors.ResinInvalidDeviceType\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin invalid device type  \n**Access:** public  \n<a name=\"new_module_errors.ResinInvalidDeviceType_new\"></a>\n\n#### new exports.ResinInvalidDeviceType(type)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| type | <code>String</code> | device type |\n\n**Example**  \n```js\nthrow new errors.ResinInvalidDeviceType('raspberry-pi')\n```\n<a name=\"module_errors.ResinMalformedToken\"></a>\n\n### errors.ResinMalformedToken\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin malformed token  \n**Access:** public  \n<a name=\"new_module_errors.ResinMalformedToken_new\"></a>\n\n#### new exports.ResinMalformedToken(token)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| token | <code>String</code> | token |\n\n**Example**  \n```js\nthrow new errors.ResinMalformedToken('1234')\n```\n<a name=\"module_errors.ResinExpiredToken\"></a>\n\n### errors.ResinExpiredToken\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin expired token  \n**Access:** public  \n<a name=\"new_module_errors.ResinExpiredToken_new\"></a>\n\n#### new exports.ResinExpiredToken(token)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| token | <code>String</code> | token |\n\n**Example**  \n```js\nthrow new errors.ResinExpiredToken('1234')\n```\n<a name=\"module_errors.ResinApplicationNotFound\"></a>\n\n### errors.ResinApplicationNotFound\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin application not found  \n**Access:** public  \n<a name=\"new_module_errors.ResinApplicationNotFound_new\"></a>\n\n#### new exports.ResinApplicationNotFound(application)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| application | <code>String</code> &#124; <code>Number</code> | application name or id |\n\n**Example**  \n```js\nthrow new errors.ResinApplicationNotFound('MyApp')\n```\n<a name=\"module_errors.ResinDeviceNotFound\"></a>\n\n### errors.ResinDeviceNotFound\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin device not found  \n**Access:** public  \n<a name=\"new_module_errors.ResinDeviceNotFound_new\"></a>\n\n#### new exports.ResinDeviceNotFound(device)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| device | <code>String</code> &#124; <code>Number</code> | device name or id |\n\n**Example**  \n```js\nthrow new errors.ResinDeviceNotFound('MyDevice')\n```\n<a name=\"module_errors.ResinAmbiguousDevice\"></a>\n\n### errors.ResinAmbiguousDevice\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin ambiguous device  \n**Access:** public  \n<a name=\"new_module_errors.ResinAmbiguousDevice_new\"></a>\n\n#### new exports.ResinAmbiguousDevice(device)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| device | <code>String</code> &#124; <code>Number</code> | device name or id |\n\n**Example**  \n```js\nthrow new errors.ResinAmbiguousDevice('MyDevice')\n```\n<a name=\"module_errors.ResinAmbiguousApplication\"></a>\n\n### errors.ResinAmbiguousApplication\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin ambiguous application  \n**Access:** public  \n<a name=\"new_module_errors.ResinAmbiguousApplication_new\"></a>\n\n#### new exports.ResinAmbiguousApplication(application)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| application | <code>String</code> &#124; <code>Number</code> | application name or id |\n\n**Example**  \n```js\nthrow new errors.ResinAmbiguousApplication('MyApp')\n```\n<a name=\"module_errors.ResinKeyNotFound\"></a>\n\n### errors.ResinKeyNotFound\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin key not found  \n**Access:** public  \n<a name=\"new_module_errors.ResinKeyNotFound_new\"></a>\n\n#### new exports.ResinKeyNotFound(key)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| key | <code>String</code> &#124; <code>Number</code> | key name, id or value |\n\n**Example**  \n```js\nthrow new errors.ResinKeyNotFound('MyKey')\n```\n<a name=\"module_errors.ResinRequestError\"></a>\n\n### errors.ResinRequestError\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin request error  \n**Access:** public  \n<a name=\"new_module_errors.ResinRequestError_new\"></a>\n\n#### new exports.ResinRequestError(body, statusCode)\n**Returns**: <code>Error</code> - error instance  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| body | <code>String</code> | response body |\n| statusCode | <code>Number</code> | http status code |\n\n**Example**  \n```js\nthrow new errors.ResinRequestError('Unauthorized')\n```\n<a name=\"module_errors.ResinNotLoggedIn\"></a>\n\n### errors.ResinNotLoggedIn\n**Kind**: static class of <code>[errors](#module_errors)</code>  \n**Summary**: Resin not logged in  \n**Access:** public  \n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io/resin-errors/issues/new) on GitHub and the Resin.io team will be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ gulp test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io/resin-errors/issues](https://github.com/resin-io/resin-errors/issues)\n- Source Code: [github.com/resin-io/resin-errors](https://github.com/resin-io/resin-errors)\n\nBefore submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:\n\n```sh\n$ gulp lint\n```\n\nLicense\n-------\n\nThe project is licensed under the Apache 2.0 license.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/resin-io/resin-errors/issues"
  },
  "_id": "resin-errors@2.4.0",
  "dist": {
    "shasum": "8ba0c3094d34b07f6e67542d9a442128227780ba"
  },
  "_from": "resin-errors@^2.4.0",
  "_resolved": "https://registry.npmjs.org/resin-errors/-/resin-errors-2.4.0.tgz"
}
